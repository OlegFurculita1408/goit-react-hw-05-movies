{"version":3,"file":"static/js/135.072d4784.chunk.js","mappings":"+QACA,EAA4B,gCAA5B,EAAqE,6BAArE,EAAuI,2BAAvI,EAAyK,2B,SC2DzK,EApDqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACRL,GAAa,GAEb,IAAMM,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAcN,GAFnB,OAERO,EAFQ,OAGdZ,EAASY,GAHK,gDAKdV,EAAS,KAAMW,SALD,yBAOdT,GAAa,GAPC,4EAAH,qDAWfM,GACD,GAAE,CAACL,IAEJ,IAAMS,GAAWC,EAAAA,EAAAA,QAAM,iBAACR,QAAD,IAACA,GAAD,UAACA,EAAUS,aAAX,aAAC,EAAiBC,YAAlB,QAA0BC,EAAAA,EAAAA,MAEjD,OACE,2BACE,8BACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAYC,GAAIP,EAASQ,QAA1C,SAAmD,YAClDvB,IAAS,SAAC,KAAD,CAAWA,MAAOA,KAC5B,wBAAI,4BACJ,2BACE,eAAIoB,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAS,UAAKC,EAAL,YAAiBA,GAAcC,GAAG,OAAjD,SAAwD,YAE1D,eAAIF,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAS,UAAKC,EAAL,YAAiBA,GAAcC,GAAG,UAAjD,SAA2D,iBAG9DlB,IAAa,SAAC,KAAD,IACbF,IAAS,uBAAG,qCACb,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACE,SAAC,KAAD,YAMX,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"button\":\"MovieDetails_button__uXZxd\",\"h3\":\"MovieDetails_h3__XH2Fl\",\"list\":\"MovieDetails_list__dbNMP\",\"link\":\"MovieDetails_link__U+v+7\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { GetAboutMovie } from '../../service/Api';\nimport { MovieCard, Loader } from 'components';\nimport { Link } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n \n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await GetAboutMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  const BackLink = useRef(location?.state?.from ?? routes.HOME);\n\n  return (\n    <main>\n      <section>\n        <div className={css.container}>\n          <Link className={css.button} to={BackLink.current}>Go Back</Link>\n          {movie && <MovieCard movie={movie} />}\n          <h3>Additional information</h3>\n          <ul>\n            <li className={css.list}>\n              <Link className={`${css.link} ${css.button}`} to=\"cast\">Cast</Link>\n            </li>\n            <li className={css.list}>\n              <Link className={`${css.link} ${css.button}`} to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          {isLoading && <Loader />}\n          {error && <p>Oops... Something went wrong...</p>}\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </section>\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["useState","movie","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","useEffect","fetchData","GetAboutMovie","data","message","BackLink","useRef","state","from","routes","className","css","to","current","Suspense","fallback"],"sourceRoot":""}